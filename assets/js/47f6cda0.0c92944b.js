"use strict";(self.webpackChunkreact_bearer_auth_context=self.webpackChunkreact_bearer_auth_context||[]).push([[601],{7233:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return k},default:function(){return h}});var r=a(7462),n=a(3366),i=(a(7294),a(3905)),l=["components"],o={id:"BearerAuthContextData",title:"Interface: BearerAuthContextData<FetcherConfig>",sidebar_label:"BearerAuthContextData",sidebar_position:0,custom_edit_url:null},p=void 0,s={unversionedId:"api/interfaces/BearerAuthContextData",id:"api/interfaces/BearerAuthContextData",isDocsHomePage:!1,title:"Interface: BearerAuthContextData<FetcherConfig>",description:"Type parameters",source:"@site/docs/api/interfaces/BearerAuthContextData.md",sourceDirName:"api/interfaces",slug:"/api/interfaces/BearerAuthContextData",permalink:"/bearer-auth-react-context/api/interfaces/BearerAuthContextData",editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"BearerAuthContextData",title:"Interface: BearerAuthContextData<FetcherConfig>",sidebar_label:"BearerAuthContextData",sidebar_position:0,custom_edit_url:null}},k=[{value:"Type parameters",id:"type-parameters",children:[]},{value:"Properties",id:"properties",children:[{value:"fetcherConfig",id:"fetcherconfig",children:[]},{value:"isRefreshing",id:"isrefreshing",children:[]}]},{value:"Methods",id:"methods",children:[{value:"setTokens",id:"settokens",children:[]},{value:"clearTokens",id:"cleartokens",children:[]},{value:"hasTokenExpired",id:"hastokenexpired",children:[]},{value:"triggerRefresh",id:"triggerrefresh",children:[]},{value:"tokenAwaiter",id:"tokenawaiter",children:[]},{value:"setRefreshFailureHandler",id:"setrefreshfailurehandler",children:[]},{value:"setRefreshSuccessHandler",id:"setrefreshsuccesshandler",children:[]}]}],d={toc:k};function h(e){var t=e.components,a=(0,n.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"type-parameters"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FetcherConfig")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("a",{parentName:"td",href:"/bearer-auth-react-context/api/interfaces/Tokens"},(0,i.kt)("inlineCode",{parentName:"a"},"Tokens")))))),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"fetcherconfig"},"fetcherConfig"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"fetcherConfig"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"FetcherConfig")),(0,i.kt)("p",null,"Generic configuration to be consumed by fetcher.\nIncludes pair of tokens: bearer token and refresh token."),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"isrefreshing"},"isRefreshing"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"isRefreshing"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"MutableRefObject"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"boolean"),">"),(0,i.kt)("p",null,"Boolean flag telling whether token refresh is currently in progress."),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"settokens"},"setTokens"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"setTokens"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"tokens"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Manually sets tokens."),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tokens")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/bearer-auth-react-context/api/interfaces/Tokens"},(0,i.kt)("inlineCode",{parentName:"a"},"Tokens")))))),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"cleartokens"},"clearTokens"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"clearTokens"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Manually clears tokens."),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"hastokenexpired"},"hasTokenExpired"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"hasTokenExpired"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"error"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Runs when request fails. Checks whether request failed because of expired token."),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"error")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"any")),(0,i.kt)("td",{parentName:"tr",align:"left"},"any error returned by API")))),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"triggerrefresh"},"triggerRefresh"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"triggerRefresh"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"null")," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/bearer-auth-react-context/api/interfaces/Tokens"},(0,i.kt)("inlineCode",{parentName:"a"},"Tokens")),">"),(0,i.kt)("p",null,"Manually trigger token refresh."),(0,i.kt)("h4",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"null")," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/bearer-auth-react-context/api/interfaces/Tokens"},(0,i.kt)("inlineCode",{parentName:"a"},"Tokens")),">"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"tokenawaiter"},"tokenAwaiter"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"tokenAwaiter"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"null")," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/bearer-auth-react-context/api/interfaces/Tokens"},(0,i.kt)("inlineCode",{parentName:"a"},"Tokens")),">"),(0,i.kt)("p",null,"Returns Promise that resolves when token is done refreshing. To be used in conjunction with ",(0,i.kt)("inlineCode",{parentName:"p"},"triggerRefresh"),"."),(0,i.kt)("h4",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"null")," ","|"," ",(0,i.kt)("a",{parentName:"p",href:"/bearer-auth-react-context/api/interfaces/Tokens"},(0,i.kt)("inlineCode",{parentName:"a"},"Tokens")),">"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setrefreshfailurehandler"},"setRefreshFailureHandler"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"setRefreshFailureHandler"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"handler"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Set callback to be called when token refresh fails. Re-exported as ",(0,i.kt)("inlineCode",{parentName:"p"},"useRefreshFailureHandler()")," hook."),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"handler")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"null")," ","|"," ",(0,i.kt)("a",{parentName:"td",href:"/bearer-auth-react-context/api/modules#refreshfailurehandler"},(0,i.kt)("inlineCode",{parentName:"a"},"RefreshFailureHandler")))))),(0,i.kt)("h4",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setrefreshsuccesshandler"},"setRefreshSuccessHandler"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"setRefreshSuccessHandler"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"handler"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Set callback to be called when token refresh succeeds. Re-exported as ",(0,i.kt)("inlineCode",{parentName:"p"},"useRefreshSuccessHandler()")," hook."),(0,i.kt)("h4",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"handler")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"null")," ","|"," ",(0,i.kt)("a",{parentName:"td",href:"/bearer-auth-react-context/api/modules#refreshsuccesshandler"},(0,i.kt)("inlineCode",{parentName:"a"},"RefreshSuccessHandler")))))),(0,i.kt)("h4",{id:"returns-6"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")))}h.isMDXComponent=!0}}]);